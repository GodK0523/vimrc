
" Base
au BufWrite /private/tmp/crontab.* set nowritebackup nobackup
au BufWrite /private/etc/pw.* set nowritebackup nobackup

set modelines=0
set nocompatible
set backspace=2
set number
set tabstop=4
set autoindent
set softtabstop=4
set shiftwidth=4
set ruler
set laststatus=2
set showcmd
set nobackup
set nowritebackup

syntax enable

" Scheme
colorscheme monokai

" File encoding
if has("multi_byte")
	if &termencoding == ""
		let &termencoding = &encoding
	endif
	set encoding=utf-8
	setglobal fileencoding=utf-8
	set fileencodings=ucs-bom,utf-8,latin1
endif

" Leader key
let mapleader=" "

" Quit insert mode
inoremap ff			<Esc>
vnoremap ff			<Esc>

" Quit normal mode
nnoremap <leader>q	:qa<CR>

" Movement
nnoremap H			^
nnoremap L			$
vnoremap H			^
vnoremap L			$

" Save file
nnoremap <leader>sf	:w<CR>
nnoremap <leader>sa	:wa<CR>

" Search
nnoremap <leader>ss	*
nnoremap <leader>sc	:nohlsearch<CR>

" Window
nnoremap <leader>ww	<C-W>w
nnoremap <leader>wd	<C-W>c
nnoremap <leader>wh	<C-W>h
nnoremap <leader>wj	<C-W>j
nnoremap <leader>wk	<C-W>k
nnoremap <leader>wl	<C-W>l
nnoremap <leader>we	<C-W>=
nnoremap <leader>ws	<C-W>s
nnoremap <leader>wv	<C-W>v

" Buffer
nnoremap <leader>bf	:BufExplorer<CR>

" Shifting
vmap <tab>			>gv
vmap <s-tab>		<gv

" Pathogen
execute pathogen#infect()
execute pathogen#helptags()

" Nerdtree
map <C-M>			:NERDTreeToggle<CR>
let NERDTreeShowBookmarks=1

" CScope
nmap <C-k>s			:cs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-k>g			:cs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-k>c			:cs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-k>t			:cs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-k>e			:cs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-k>f			:cs find f <C-R>=expand("<cfile>")<CR><CR>
nmap <C-k>i			:cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <C-k>d			:cs find d <C-R>=expand("<cword>")<CR><CR>

if has("cscope")
	set csprg=/usr/bin/cscope
	set csto=1
	set cst
	set nocsverb
	if filereadable("cscope.out")
		cs add cscope.out
	endif
	set csverb
endif

" Powerline
set t_Co=256
let g:Powerline_symbols='fancy'

" Ctrlp
let g:ctrlp_map='<C-p>'
let g:ctrlp_cmd='CtrlP'

" Taglist
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
let Tlist_Ctags_Cmd="/usr/bin/ctags"
let Tlist_Use_Right_Window=1
let Tlist_Sort_Type="name"
let Tlist_Use_SingleClick=1
let Tlist_WinWidth=40

" Title
function AddTitle()
	call append(0,"/*==============================================")
	call append(1,"#")
	call append(2,"# Filename: ".expand("%:t"))
	call append(3,"# Author: aronfan")
	call append(4,"# Editor: Vim")
	call append(5,"# Create: ".strftime("%Y-%m-%d %H:%M"))
	call append(6,"# Last modified: ".strftime("%Y-%m-%d %H:%M"))
	call append(7,"# Description: ")
	call append(8,"#")
	call append(9,"==============================================*/")
echohl WarningMsg | echo "Successful in adding the copyright." | echohl None
endfunction

function UpdateTitle()
	normal m'
	execute '/# *Last modified:/s@:.*$@\=strftime(": %Y-%m-%d %H:%M")@'
	normal ''
	normal mk
	execute '/# *Filename:/s@:.*$@\=": ".expand("%:t")@'
	execute "noh"
	normal 'k
	echohl WarningMsg | echo "Successful in updating the copyright." | echohl None
endfunction

function TitleDet()
	let n = 1
	while n < 10
		let line = getline(n)
		if line =~ '^\#\s*\S*Last\smodified:\S*.*$'
			call UpdateTitle()
			return
		endif
		let n = n + 1
	endwhile
	call AddTitle()
endfunction

nmap <F8>			:call TitleDet()<CR>
